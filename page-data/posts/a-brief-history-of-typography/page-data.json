{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/a-brief-history-of-typography","result":{"data":{"markdownRemark":{"id":"b4b00cc6-3112-5dd2-beae-5dc7fd7670fb","html":"<h1 id=\"greedy-algorithm\" style=\"position:relative;\"><a href=\"#greedy-algorithm\" aria-label=\"greedy algorithm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Greedy Algorithm</h1>\n<p>휴리스틱 문제 해결 알고리즘(<a href=\"https://ko.wikipedia.org/wiki/%ED%9C%B4%EB%A6%AC%EC%8A%A4%ED%8B%B1_%EC%9D%B4%EB%A1%A0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://ko.wikipedia.org/wiki/휴리스틱_이론</a>)</p>\n<p>합리적인 판단을 할 수 없는 경우 용이하게 구성된 간편추론 방법</p>\n<ul>\n<li>앞선 선택을 다시 고려하지 않음</li>\n<li>부분 문제에 대한 최적 해결 방법 → 문제 해결 방법</li>\n<li>최적에 가까운 답, 그러나 반드시 최적해는 아님</li>\n<li>-</li>\n</ul>\n<p>Examples: Dijkstra, Huffman Coding, Decision Tree, UD3</p>\n<h2 id=\"compare-to-dynamic-algorithm\" style=\"position:relative;\"><a href=\"#compare-to-dynamic-algorithm\" aria-label=\"compare to dynamic algorithm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Compare to Dynamic Algorithm</h2>\n<p><strong>Dynamic Algorithm</strong></p>\n<p>하위 문제에 대한 최적 솔루션 찾아 → 전역 최적 솔루션 선택</p>\n<p><strong>Greedy Algorithm</strong></p>\n<p>각 단계마다 로컬 최적해를 찾아 문제의 크기 작게 줄여나감</p>\n<p>가장큰 합, 동전 바꾸기 문제를 풀 수 없음</p>\n<h2 id=\"knapsack-problem\" style=\"position:relative;\"><a href=\"#knapsack-problem\" aria-label=\"knapsack problem permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Knapsack Problem</h2>\n<br />\n<h2 id=\"queue-reconstruction-by-height\" style=\"position:relative;\"><a href=\"#queue-reconstruction-by-height\" aria-label=\"queue reconstruction by height permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Queue Reconstruction by height</h2>\n<p><a href=\"https://leetcode.com/problems/queue-reconstruction-by-height/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://leetcode.com/problems/queue-reconstruction-by-height/</a>\n<a href=\"https://github.com/HONOOUR/Algorithm_Test/blob/main/Algorithm_Python/QueueReconstructionByHeight.py\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/HONOOUR/Algorithm_Test/blob/main/Algorithm_Python/QueueReconstructionByHeight.py</a></p>\n<ol>\n<li>\n<p>Sort people by height in decreasing order</p>\n<p>use max heap by adding minus</p>\n<p>maxheap = [[-7, 0], [-6, 1], [-7, 1], [-4, 4], [-5, 0], [-5, 2]]</p>\n</li>\n<li>\n<p>Use index to push the person into an array(result)</p>\n<p>person[high, index]</p>\n</li>\n<li>\n<p>Pop person(from maxheap) and push into the new array - use index - [7,0] - [7,0] [7,1] - [7,0] <strong>[6.1]</strong> [7,1] ← 6 with index 1 - [**5,0]** [7,0] [6.1] [7,1] ← 5 with index 0</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    it does not harm the array in the past. The people in the array were taller than 5. Index only affects when the rest are taller.\n\n- [**5,0]** [7,0] [5,2] [6.1] [7,1] ← 5 with index 2\n- [**5,0]** [7,0] [5,2] [6.1] [4,4] [7,1] ← 4 with index 4</code></pre></div>\n<br />\n</li>\n</ol>\n<h2 id=\"task-scheduler\" style=\"position:relative;\"><a href=\"#task-scheduler\" aria-label=\"task scheduler permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Task Scheduler</h2>\n<p><a href=\"https://leetcode.com/problems/task-scheduler/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://leetcode.com/problems/task-scheduler/</a>\n<a href=\"https://github.com/HONOOUR/Algorithm_Test/blob/main/Algorithm_Python/TaskScheduler.py\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/HONOOUR/Algorithm_Test/blob/main/Algorithm_Python/TaskScheduler.py</a></p>\n<ol>\n<li>Create a dic of word occurrence (counter)</li>\n<li>\n<p>Sort tasks with their occurrence (the n most common tasks)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">counter<span class=\"token punctuation\">.</span>most_common<span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># consider idle time</span></code></pre></div>\n</li>\n<li>\n<p>while True until the counter is empty</p>\n<p>add 1 to result and subtract 1 from the task’s value</p>\n<p>if the n most common is 1 less than n+1, add 1 to result for idle time</p>\n</li>\n</ol>\n<p><strong>Counter object</strong></p>\n<p><em>for occurrences of words in a list</em></p>\n<p><strong>most_common(n)</strong></p>\n<p><em>return a list of the n most common elements</em></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">count <span class=\"token operator\">=</span> Counter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> word <span class=\"token keyword\">in</span> word_array<span class=\"token punctuation\">:</span>\n    count<span class=\"token punctuation\">[</span>word<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></code></pre></div>","fields":{"slug":"/posts/a-brief-history-of-typography","tagSlugs":["/tag/algorithm/","/tag/python/","/tag/greedy/"]},"frontmatter":{"date":"2021-04-17T22:40:32.169Z","description":"Greedy Algorithm with python","tags":["Algorithm","Python","Greedy"],"title":"Greedy Algorithm","socialImage":null}}},"pageContext":{"slug":"/posts/a-brief-history-of-typography"}},"staticQueryHashes":["251939775","401334301","825871152"]}